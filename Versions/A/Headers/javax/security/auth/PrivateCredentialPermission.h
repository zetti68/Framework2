//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.siemens.android.wrapper/src/javax/security/auth/PrivateCredentialPermission.java
//

#ifndef _JavaxSecurityAuthPrivateCredentialPermission_H_
#define _JavaxSecurityAuthPrivateCredentialPermission_H_

#include "J2ObjC_header.h"
#include "java/security/Permission.h"

@class IOSObjectArray;

@interface JavaxSecurityAuthPrivateCredentialPermission : JavaSecurityPermission

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)action;

- (jboolean)isEqual:(id)pObj;

- (NSString *)getActions;

- (NSString *)getCredentialClass;

- (IOSObjectArray *)getPrincipals;

- (NSUInteger)hash;

- (jboolean)impliesWithJavaSecurityPermission:(JavaSecurityPermission *)permission;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxSecurityAuthPrivateCredentialPermission)

FOUNDATION_EXPORT void JavaxSecurityAuthPrivateCredentialPermission_initWithNSString_withNSString_(JavaxSecurityAuthPrivateCredentialPermission *self, NSString *name, NSString *action);

FOUNDATION_EXPORT JavaxSecurityAuthPrivateCredentialPermission *new_JavaxSecurityAuthPrivateCredentialPermission_initWithNSString_withNSString_(NSString *name, NSString *action) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaxSecurityAuthPrivateCredentialPermission)

#endif // _JavaxSecurityAuthPrivateCredentialPermission_H_
