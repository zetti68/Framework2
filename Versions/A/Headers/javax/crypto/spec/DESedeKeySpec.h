//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.siemens.android.wrapper/src/javax/crypto/spec/DESedeKeySpec.java
//

#ifndef _JavaxCryptoSpecDESedeKeySpec_H_
#define _JavaxCryptoSpecDESedeKeySpec_H_

#include "J2ObjC_header.h"
#include "java/security/spec/KeySpec.h"

@class IOSByteArray;

#define JavaxCryptoSpecDESedeKeySpec_DES_EDE_KEY_LEN 24

@interface JavaxCryptoSpecDESedeKeySpec : NSObject < JavaSecuritySpecKeySpec >

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)key;

- (instancetype)initWithByteArray:(IOSByteArray *)key
                          withInt:(jint)offset;

- (IOSByteArray *)getKey;

+ (jboolean)isParityAdjustedWithByteArray:(IOSByteArray *)key
                                  withInt:(jint)offset;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxCryptoSpecDESedeKeySpec)

J2OBJC_STATIC_FIELD_GETTER(JavaxCryptoSpecDESedeKeySpec, DES_EDE_KEY_LEN, jint)

FOUNDATION_EXPORT void JavaxCryptoSpecDESedeKeySpec_initWithByteArray_(JavaxCryptoSpecDESedeKeySpec *self, IOSByteArray *key);

FOUNDATION_EXPORT JavaxCryptoSpecDESedeKeySpec *new_JavaxCryptoSpecDESedeKeySpec_initWithByteArray_(IOSByteArray *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaxCryptoSpecDESedeKeySpec_initWithByteArray_withInt_(JavaxCryptoSpecDESedeKeySpec *self, IOSByteArray *key, jint offset);

FOUNDATION_EXPORT JavaxCryptoSpecDESedeKeySpec *new_JavaxCryptoSpecDESedeKeySpec_initWithByteArray_withInt_(IOSByteArray *key, jint offset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT jboolean JavaxCryptoSpecDESedeKeySpec_isParityAdjustedWithByteArray_withInt_(IOSByteArray *key, jint offset);

J2OBJC_TYPE_LITERAL_HEADER(JavaxCryptoSpecDESedeKeySpec)

#endif // _JavaxCryptoSpecDESedeKeySpec_H_
