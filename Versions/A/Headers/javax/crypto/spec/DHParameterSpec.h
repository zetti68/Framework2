//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.siemens.android.wrapper/src/javax/crypto/spec/DHParameterSpec.java
//

#ifndef _JavaxCryptoSpecDHParameterSpec_H_
#define _JavaxCryptoSpecDHParameterSpec_H_

#include "J2ObjC_header.h"
#include "java/security/spec/AlgorithmParameterSpec.h"

@class JavaMathBigInteger;

@interface JavaxCryptoSpecDHParameterSpec : NSObject < JavaSecuritySpecAlgorithmParameterSpec >

#pragma mark Public

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g;

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g
                                   withInt:(jint)l;

- (JavaMathBigInteger *)getG;

- (jint)getL;

- (JavaMathBigInteger *)getP;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxCryptoSpecDHParameterSpec)

FOUNDATION_EXPORT void JavaxCryptoSpecDHParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaxCryptoSpecDHParameterSpec *self, JavaMathBigInteger *p, JavaMathBigInteger *g);

FOUNDATION_EXPORT JavaxCryptoSpecDHParameterSpec *new_JavaxCryptoSpecDHParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaxCryptoSpecDHParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaxCryptoSpecDHParameterSpec *self, JavaMathBigInteger *p, JavaMathBigInteger *g, jint l);

FOUNDATION_EXPORT JavaxCryptoSpecDHParameterSpec *new_JavaxCryptoSpecDHParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *g, jint l) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaxCryptoSpecDHParameterSpec)

#endif // _JavaxCryptoSpecDHParameterSpec_H_
