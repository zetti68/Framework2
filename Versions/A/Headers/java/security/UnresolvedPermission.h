//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.siemens.android.wrapper/src/java/security/UnresolvedPermission.java
//

#ifndef _JavaSecurityUnresolvedPermission_H_
#define _JavaSecurityUnresolvedPermission_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "java/security/Permission.h"

@class IOSObjectArray;

@interface JavaSecurityUnresolvedPermission : JavaSecurityPermission < JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)type
                    withNSString:(NSString *)name
                    withNSString:(NSString *)actions
withJavaSecurityCertCertificateArray:(IOSObjectArray *)certs;

- (jboolean)isEqual:(id)pObj;

- (NSString *)getActions;

- (NSString *)getUnresolvedActions;

- (IOSObjectArray *)getUnresolvedCerts;

- (NSString *)getUnresolvedName;

- (NSString *)getUnresolvedType;

- (NSUInteger)hash;

- (jboolean)impliesWithJavaSecurityPermission:(JavaSecurityPermission *)permission;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityUnresolvedPermission)

FOUNDATION_EXPORT void JavaSecurityUnresolvedPermission_initWithNSString_withNSString_withNSString_withJavaSecurityCertCertificateArray_(JavaSecurityUnresolvedPermission *self, NSString *type, NSString *name, NSString *actions, IOSObjectArray *certs);

FOUNDATION_EXPORT JavaSecurityUnresolvedPermission *new_JavaSecurityUnresolvedPermission_initWithNSString_withNSString_withNSString_withJavaSecurityCertCertificateArray_(NSString *type, NSString *name, NSString *actions, IOSObjectArray *certs) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityUnresolvedPermission)

#endif // _JavaSecurityUnresolvedPermission_H_
