//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.siemens.android.wrapper/src/java/security/cert/X509CRL.java
//

#ifndef _JavaSecurityCertX509CRL_H_
#define _JavaSecurityCertX509CRL_H_

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecurityCertX509CRLEntry;
@class JavaSecurityCertX509Certificate;
@class JavaUtilDate;
@class JavaxSecurityAuthX500X500Principal;
@protocol JavaSecurityPrincipal;
@protocol JavaSecurityPublicKey;
@protocol JavaUtilSet;

#import "JreEmulation.h"
#include "java/security/cert/CRL.h"
#include "java/security/cert/X509Extension.h"

@interface JavaSecurityCertX509CRL : JavaSecurityCertCRL < JavaSecurityCertX509Extension > {
}

- (instancetype)init;

- (jboolean)isEqual:(id)other;

- (NSUInteger)hash;

- (IOSByteArray *)getEncoded;

- (void)verifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key;

- (void)verifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
                           withNSString:(NSString *)sigProvider;

- (jint)getVersion;

- (id<JavaSecurityPrincipal>)getIssuerDN;

- (JavaxSecurityAuthX500X500Principal *)getIssuerX500Principal;

- (JavaUtilDate *)getThisUpdate;

- (JavaUtilDate *)getNextUpdate;

- (JavaSecurityCertX509CRLEntry *)getRevokedCertificateWithJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

- (JavaSecurityCertX509CRLEntry *)getRevokedCertificateWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)certificate;

- (id<JavaUtilSet>)getRevokedCertificates;

- (IOSByteArray *)getTBSCertList;

- (IOSByteArray *)getSignature;

- (NSString *)getSigAlgName;

- (NSString *)getSigAlgOID;

- (IOSByteArray *)getSigAlgParams;

@end

__attribute__((always_inline)) inline void JavaSecurityCertX509CRL_init() {}

#endif // _JavaSecurityCertX509CRL_H_
